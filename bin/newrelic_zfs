#!/usr/bin/env ruby

require 'rubygems'
require 'bundler/setup'

require 'newrelic_plugin'
require 'trollop'

require 'collector'
require 'newrelic_zfs/config'

module ZfsAgent

  class Agent < NewRelic::Plugin::Agent::Base

    agent_guid 'com.tomreay.newrelic-zfs'
    agent_version '1.0.0'
    agent_config_options :instance_name, :print_metrics
    agent_human_labels("ZFS Agent") { instance_name }

    def initialize(context, options)
      puts 'Initializing ZfsAgent'
      @collector = Collector.new
      super(context, options)
    end

    def poll_cycle
      puts 'Starting metrics collection'
      metrics = @collector.collect_stats
      puts "#{metrics.length} metrics collected, sending to New Relic"
      metrics.each do |metric|
        puts 'Reporting metric named ' + metric.newrelic_name + ' with value ' +
                 metric.value.to_s + ' and unit ' + metric.unit
      end

      metrics.each do |metric|
        report_metric metric.newrelic_name, metric.unit, metric.value
      end
      puts 'Finished sending metrics to New Relic'
    end
  end

  opts = Trollop::options do
    opt :config_file, "Config file", :type => :string
  end

  config_file_path = ZfsConfig::get_config_location(ARGV[0])
  if config_file_path.nil?
    exit
  end

  NewRelic::Plugin::Config::config_file = config_file_path
  NewRelic::Plugin::Setup.install_agent :zfs, ZfsAgent
  NewRelic::Plugin::Run.setup_and_run
end